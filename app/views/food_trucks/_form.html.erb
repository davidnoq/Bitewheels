<div class="d-flex justify-content-center align-items-center bg-white">
  <div class="card shadow-lg" style="max-width: 800px; width: 100%; margin: auto;">
    <div class="card-body px-5 py-4">
      <h2 class="card-title text-center text-dark fw-bold mb-4">
        <%= @food_truck.new_record? ? "Food Truck Details" : "Edit Food Truck Details" %>
      </h2>
      <p class="text-center text-secondary mb-4">
        Enter the information for your food truck.
      </p>

      <% form_model = @event.present? ? [@event, @food_truck] : @food_truck %>

      <%= form_with(model: form_model, local: true, html: { multipart: true, class: 'px-3 needs-validation', novalidate: true }) do |form| %>
        
        <!-- Name Field -->
        <div class="mb-3">
          <%= form.label :name, class: 'form-label' %>
          <%= form.text_field :name, class: 'form-control', placeholder: 'Enter your food truck name', required: true %>
          <div class="invalid-feedback">Please provide a name.</div>
        </div>

        <!-- Cuisine Field -->
        <div class="mb-3">
          <%= form.label :cuisine, class: 'form-label' %>
          <%= form.select :cuisine, options_for_select(['Latin', 'Italian', 'Japanese', 'American', 'Indian'], form.object.cuisine), { prompt: 'Select a Cuisine Type' }, class: 'form-control', required: true, id: 'cuisine_select' %>
          <div class="invalid-feedback">Please select a cuisine type.</div>
        </div>

        

        <!-- Permit Upload Field -->
        <div class="mb-3">
          <%= form.label :permit, class: 'form-label d-flex align-items-center' do %>
            <i class="bi bi-file-earmark me-2"></i> Upload Permit (PDF or Image)
          <% end %>
          
          <!-- Display Existing Permit -->
          <% if @food_truck.permit.attached? %>
            <div class="mb-2" id="existing-permit">
              <p>
                <strong>Existing Permit:</strong> <%= @food_truck.permit.filename.to_s %>
                <%= link_to 'Remove Permit', remove_permit_food_truck_path(@food_truck),
                      method: :delete,
                      data: { confirm: 'Are you sure you want to remove this permit?' },
                      class: 'btn btn-danger btn-sm ms-2' %>
              </p>
            </div>
          <% end %>

          <%= form.file_field :permit, accept: 'application/pdf,image/*', class: 'form-control', id: 'permit_input' %>
          <!-- Preview Container for New Permit -->
          <ul id="permit_preview" class="list-group mt-3"></ul>
        </div>

        

        <!-- Menu Files Upload Field (Images or PDFs, up to 3) -->
        <div class="mb-3">
          <%= form.label :menu_files, class: 'form-label d-flex align-items-center' do %>
            <i class="bi bi-file-earmark me-2"></i> Upload Menu Files (Images or PDFs, up to 3)
          <% end %>
          <% if @food_truck.menu_files.attached? %>
            <p>Current Menu Files:</p>
            <ul class="list-group mb-3">
              <% @food_truck.menu_files.each do |file| %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  <%= file.filename.to_s %>
                  <%= link_to 'Remove File', remove_menu_file_food_truck_path(@food_truck, file_id: file.id),
                        method: :delete,
                        data: { confirm: 'Are you sure you want to remove this menu file?' },
                        class: 'btn btn-danger btn-sm' %>
                </li>
              <% end %>
            </ul>
          <% end %>
          <%= form.file_field :menu_files, multiple: true, accept: 'application/pdf,image/*', class: 'form-control', id: 'menu_files_input' %>
          <!-- Preview Container for New Menu Files -->
          <ul id="menu_files_preview" class="list-group mt-3"></ul>
        </div>

        <!-- Food Images Upload Field (up to 10 images) -->
        <div class="mb-3">
          <%= form.label :food_images, class: 'form-label d-flex align-items-center' do %>
            <i class="bi bi-egg-fried me-2"></i> Food Images (up to 10)
          <% end %>
          <%= form.file_field :food_images, multiple: true, name: 'food_truck[food_images][]', direct_upload: true, class: 'form-control', accept: 'image/png,image/jpeg', id: 'food_images_input' %>
          <!-- Preview Container for New Food Images -->
          <ul id="food_images_preview" class="list-group mt-3"></ul>
        </div>
        <!-- Current Food Images -->
        <% if @food_truck.food_images.attached? %>
          <p>Current Food Images:</p>
          <ul class="list-group mb-3">
            <% @food_truck.food_images.each do |image| %>
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <%= image.filename.to_s %>
                <%= link_to 'Remove Image', remove_food_image_food_truck_path(@food_truck, image_id: image.id), 
                    method: :delete,
                    data: { confirm: 'Are you sure you want to remove this image?' },
                    class: 'btn btn-danger btn-sm' %>
              </li>
            <% end %>
          </ul>
        <% end %>
        <!-- Submit Button -->
        <div class="d-flex justify-content-center">
          <%= form.submit @food_truck.new_record? ? "Create New Food Truck" : "Update Food Truck", class: "btn btn-primary mt-4 px-5" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- JavaScript for File Previews and Removal -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    

    // Function to create a file preview as a list item
    function createFileListItem(file, containerId, fileInputId, isSingle = false) {
      const previewContainer = document.getElementById(containerId);
      const listItem = document.createElement('li');
      listItem.className = 'list-group-item d-flex justify-content-between align-items-center';

      listItem.textContent = file.name;

      const removeButton = document.createElement('button');
      removeButton.type = 'button';
      removeButton.className = 'btn btn-danger btn-sm';
      removeButton.innerText = 'Remove';
      removeButton.addEventListener('click', function() {
        previewContainer.removeChild(listItem);
        removeFileFromInput(fileInputId, file);
      });

      listItem.appendChild(removeButton);
      previewContainer.appendChild(listItem);
    }

    // Function to remove a file from the input
    function removeFileFromInput(fileInputId, fileToRemove) {
      const input = document.getElementById(fileInputId);
      const dt = new DataTransfer();
      const files = input.files;

      for (let i = 0; i < files.length; i++) {
        if (files[i] !== fileToRemove) {
          dt.items.add(files[i]);
        }
      }

      input.files = dt.files;
    }

    // Handle Menu Files Input Change
    const menuFilesInput = document.getElementById('menu_files_input');
    menuFilesInput.addEventListener('change', function() {
      const files = Array.from(this.files);
      files.forEach(file => {
        createFileListItem(file, 'menu_files_preview', 'menu_files_input');
      });
    });

    // Handle Food Images Input Change
    const foodImagesInput = document.getElementById('food_images_input');
    foodImagesInput.addEventListener('change', function() {
      const files = Array.from(this.files);
      files.forEach(file => {
        createFileListItem(file, 'food_images_preview', 'food_images_input');
      });
    });

    // Handle Permit Input Change
    const permitInput = document.getElementById('permit_input');
    const permitPreview = document.getElementById('permit_preview');
    const existingPermit = document.getElementById('existing-permit');

    permitInput.addEventListener('change', function() {
      const file = this.files[0];
      if (file) {
        // Clear existing preview
        permitPreview.innerHTML = '';
        // Hide existing permit display if present
        if (existingPermit) {
          existingPermit.style.display = 'none';
        }

        if (file.type.startsWith('image/') || file.type === 'application/pdf') {
          createFileListItem(file, 'permit_preview', 'permit_input', true);
        } else {
          alert('Only PDF and image files are allowed for permits.');
          permitInput.value = ''; // Clear the input
        }
      } else {
        // If no file selected, show existing permit if any
        if (existingPermit) {
          existingPermit.style.display = 'block';
        }
      }
    });
  });
</script>
