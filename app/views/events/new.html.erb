<div class="container d-flex flex-column justify-content-center align-items-center min-vh-100">
  <div class="card shadow-sm p-4">
    <h3 class="text-center mb-4">Add an Event</h3>

    <%= form_with(model: @event, local: true, html: { class: 'needs-validation' }) do |form| %>
      <% if @event.errors.any? %>
        <div id="error_explanation" class="alert alert-danger">
          <h4><%= pluralize(@event.errors.count, "error") %> prohibited this event from being saved:</h4>
          <ul>
            <% @event.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="row justify-content-center">
        <div class="col-md-7">
          <div class="row mb-3">
            <div class="col">
              <%= form.label :name, class: 'form-label' %>
              <%= form.text_field :name, class: 'form-control', placeholder: 'Enter the event name' %>
            </div>
            <div class="col">
              <%= form.label :location, class: 'form-label' %>
              <%= form.text_field :location, class: 'form-control', placeholder: 'Enter the event’s address' %>
            </div>
          </div>

          <!-- Single Date Field -->
          <div class="mb-3">
            <%= form.label :date, class: 'form-label' %>
            <%= form.date_select :date, class: 'form-control' %>
          </div>

          <div class="mb-3">
            <%= form.label :expected_attendees, class: 'form-label' %>
            <%= form.number_field :expected_attendees, class: 'form-control', min: 1, placeholder: 'Enter the expected attendees' %>
          </div>

          <div class="mb-3">
            <%= form.label :logo, class: 'form-label' %>
            <%= form.file_field :logo, class: 'form-control' %>
          </div>

          <div class="mb-3">
            <%= form.label :description, class: 'form-label' %>
            <%= form.text_area :description, class: 'form-control', placeholder: 'Enter the event’s description', rows: 4 %>
          </div>

          <h3 class="mt-4 mb-3">Food Trucks Needed</h3>
          <div class="mb-3">
            <%= form.label :amount_of_food_trucks, class: 'form-label' %>
            <%= form.number_field :amount_of_food_trucks, id: 'amount_of_food_trucks', class: 'form-control', min: 1 %>
          </div>

          <div id="food_trucks_container" class="mb-3"></div>

          <div class="d-grid gap-2">
            <%= form.submit 'Create Event', class: 'btn btn-primary btn-lg' %>
          </div>
        </div>
      </div>
    <% end %>

    <div class="mt-3 text-center">
      <%= link_to 'Back', events_path, class: 'btn btn-secondary' %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const amountInput = document.getElementById('amount_of_food_trucks');
    const container = document.getElementById('food_trucks_container');

    const generateCuisineFields = (count) => {
      container.innerHTML = '';
      for (let i = 0; i < count; i++) {
        const fieldDiv = document.createElement('div');
        fieldDiv.className = 'food_truck_fields mb-3';
        fieldDiv.innerHTML = `
          <h3>Truck #${i + 1}</h3>
          <div class="mb-3">
            <label for="event_food_trucks_attributes_${i}_name" class="form-label">Truck Name</label>
            <input type="text" name="event[food_trucks_attributes][${i}][name]" id="event_food_trucks_attributes_${i}_name" class="form-control" required>
          </div>
          <div class="mb-3">
            <label for="event_food_trucks_attributes_${i}_cuisine" class="form-label">Cuisine</label>
            <input type="text" name="event[food_trucks_attributes][${i}][cuisine]" id="event_food_trucks_attributes_${i}_cuisine" class="form-control" required>
          </div>
        `;
        container.appendChild(fieldDiv);
      }
    };

    amountInput.addEventListener('input', function() {
      const count = parseInt(this.value) || 0;
      generateCuisineFields(count);
    });
  });
</script>
